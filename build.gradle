/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.4-rc-4/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
	id 'application'
	id 'maven'
	id 'java'
    id 'jacoco'
}

apply plugin: 'application'
mainClassName = 'MainApp.Main'


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
	mavenLocal()
	mavenCentral()
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
		
	compile 'com.googlecode.json-simple:json-simple:1.1.1'
	
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.testfx', name: 'testfx-junit', version: '4.0.15-alpha'
}
jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jar {
    manifest {
        attributes "Main-Class": "MainApp.Main"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


